С помощью
jhsdb jmap --heap --pid  посмотрел основную информацию. По умолчанию используется топовый коллектор G1 для серверов
с MaxHeapSize 4 gb, 4 потока GC.  При росте кол-ва объектов быстрее всего растет Young Gen, Old Gen гораздо 2 раза медленнее.
Похоже что происходит динамическое изменение размеров областей памяти под объекты. Это видно в приложении jconsole.
Сначала выделяется для Eden выделяется 50 mb и размер использованной памяти растет постоянно даже при простое приложения, когда заявки не  добавляются.
Но при подходе к верхней границе не сразу запускается сборщик, а сначала границу расширяют. Через пару расширений запускается минорный GS.

Tenured (old gen) тоже понемногу растет, но гораздо медленнее. Цикла полной сборки так и не дождался.

Survivor постоянно забит.

Ограничиваю -Xmx14m

Eden выставляется всего 4 mb и при подходе к 2mb сразу запускается коллектор. График Eden превращается в синусоиду.
При этом размер old gen постоянен 4 mb и больших сборок также нет.

Вызвать OutOfMemoryError не получается.

Выставляю -XX:+UseParallelGC c 14m не удается  вызвать OutOfMemoryError, вводя новые заявки.

Ввожу -Xmx8m  снова не удается, но вижу первый раз стал запускаться полный цикл сборки, почти обнуляя old gen

Ввожу -Xmx6m опять заявками не удается перегнать GC

Ввожу -XX:+UseSerialGC -Xmx4m но запускается mark sweep compact сборщик а не serial.  Интересно.

Добиться OutOfMemoryError получается только с  -Xmx2m
